#!/bin/bash
# A utility script that generates a package name from a package type
# Positional Arguments:
#   1) package type
set -eo pipefail

echo_prefix="    [rapids-package-name] "

if [[ ! -v RAPIDS_REPOSITORY ]]; then
    rapids-echo-stderr "${echo_prefix}Env var RAPIDS_REPOSITORY must be set"
    exit 1
fi
repo_name="${RAPIDS_REPOSITORY##*/}"

if [ -z "$1" ]; then
  rapids-echo-stderr "${echo_prefix}Must specify input arguments: PKG_TYPE"
  exit 1
fi

pkg_type="$1"

append_pyver=0
append_wheelname=0

case "${pkg_type}" in
  conda_cpp)
    ;;
  conda_python)
    append_pyver=1
    ;;
  wheel_python)
    append_pyver=1
    append_wheelname=1
    ;;
  *)
    rapids-echo-stderr "${echo_prefix}Nonstandard package type '${pkg_type}'"
    exit 1
    ;;
esac

pkg_name="${pkg_type}"

# for wheels, add the python wheel name if env var is set
if (( append_wheelname )) && [[ -v RAPIDS_PY_WHEEL_NAME ]] && [[ "${RAPIDS_PY_WHEEL_NAME}" != "" ]]; then
  pkg_name+="_${RAPIDS_PY_WHEEL_NAME}"
fi

# for python package types, add pyver
if (( append_pyver == 1 )); then
  if [[ ! -v RAPIDS_PY_VERSION ]]; then
    rapids-echo-stderr "${echo_prefix}Env var RAPIDS_PY_VERSION must be set"
    exit 1
  fi

  pkg_name+="_${RAPIDS_PY_VERSION//./}"
fi

# for cpp and python package types, always append arch
if [[ -v RAPIDS_ARCH ]] && [[ "${RAPIDS_ARCH}" != "" ]]; then
  # use arch override if specified
  pkg_name+="_${RAPIDS_ARCH}"
else
  # otherwise use architecture of the host that's running the upload command
  pkg_name+="_$(arch)"
fi

# for cpp and python package types, its a tarball, append .tar.gz and prepend project name
pkg_name="${repo_name}_${pkg_name}.tar.gz"

echo -n "${pkg_name}"
