#!/bin/bash
# Wraps arbitrary commands with arbitrary args. Emits an OpenTelemetry span for tracing the command
#
set -x

SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

RAPIDS_OTEL_TRACES_EXPORTER="${RAPIDS_OTEL_TRACES_EXPORTER:-${RAPIDS_OTEL_EXPORTER:-"console"}}"
RAPIDS_OTEL_METRICS_EXPORTER="${RAPIDS_OTEL_METRICS_EXPORTER:-${RAPIDS_OTEL_EXPORTER:-"console"}}"
RAPIDS_OTEL_LOGS_EXPORTER="${RAPIDS_OTEL_LOGS_EXPORTER:-${RAPIDS_OTEL_EXPORTER:-"console"}}"
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT="${OTEL_EXPORTER_OTLP_TRACES_ENDPOINT:-${OTEL_EXPORTER_OTLP_ENDPOINT}/v1/traces}"
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT="${OTEL_EXPORTER_OTLP_METRICS_ENDPOINT:-${OTEL_EXPORTER_OTLP_ENDPOINT}/v1/metrics}"
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT="${OTEL_EXPORTER_OTLP_LOGS_ENDPOINT:-${OTEL_EXPORTER_OTLP_ENDPOINT}/v1/logs}"
export TRACEPARENT
export OTEL_SERVICE_NAME

set -x

if [[ $(type otel-cli >/dev/null 2>&1) -eq 0 ]] && [ "$TRACEPARENT" != "" ]; then
    if [ -n "${RAPIDS_TRACE_DEBUG}" ]; then
        rapids-echo-stderr "Running command with OpenTelemetry instrumentation";
    fi;

    if [ "$OTEL_SERVICE_NAME" = "" ]; then
        rapids-echo-stderr "WARNING: OTEL_SERVICE_NAME variable not provided. Traces from different steps may not be associated correctly."
    fi

    # Some commands have instrumentation. For example, conda-build has monkey-patched instrumentation
    # that can be activated with the opentelemetry-instrument command. For these commands,
    # we replace the command with the wrapped command, quoted as a whole for the purposes
    # of otel-cli exec, so that flags don't get confused.
    case "$1" in
        conda* )
        if [ -n "${RAPIDS_TRACE_DEBUG}" ]; then
            rapids-echo-stderr "using opentelemetry-instrument for command";
            rapids-echo-stderr "TRACEPARENT prior to otel-cli exec is: \"${TRACEPARENT}\"";
        fi;
        STEP_TRACEPARENT=$("${SCRIPT_DIR}/rapids-get-telemetry-traceparent" "${OTEL_SERVICE_NAME}" "${STEP_NAME}")

        # otel-cli creates a span for us that bridges the traceparent from the parent process
        # shellcheck disable=SC2086,SC2048
        otel-cli exec \
            --name "Run instrumented \"$*\"" \
            --force-parent-span-id "$(cut -d'-' -f3 <<<"$STEP_TRACEPARENT")" \
            --verbose \
            -- \
                opentelemetry-instrument \
                "$@"
        ;;
        * )
        if [ -n "${RAPIDS_TRACE_DEBUG}" ]; then
            rapids-echo-stderr "No opentelemetry instrumentation known for command $*";
        fi;
        # shellcheck disable=SC2086,SC2048
        otel-cli exec \
            --name "Run instrumented \"$*\"" \
            --force-parent-span-id "$(cut -d'-' -f3 <<<"$STEP_TRACEPARENT")" \
            --verbose \
            -- "$@"
        ;;
    esac
        RETURN_STATUS=$?
else
    if [ -n "${RAPIDS_TRACE_DEBUG}" ]; then
        rapids-echo-stderr "Telemetry disabled from lack of otel-cli on PATH or no TRACEPARENT set";
        rapids-echo-stderr "Running command unmodified";
    fi;
    "$@"
    RETURN_STATUS=$?
fi

exit "${RETURN_STATUS}"
