#!/bin/bash
# A utility script that examines environment variables provided
# by GitHub Actions to print out an S3 path where the expected artifact
# should be.
#
# The output format should be one of the following:
#
## For PR builds:
## s3://rapids-downloads/ci/<REPO_NAME>/pull-request/<PR_NUMBER>/<SHORT_HASH>/

## For branch builds:
## s3://rapids-downloads/ci/<REPO_NAME>/branch/<BRANCH_NAME>/<SHORT_HASH>/

## For nightly builds:
## s3://rapids-downloads/nightly/<REPO_NAME>/<DATE>/<SHORT_HASH>/
set -eo pipefail

echo_prefix="    [rapids-s3-path] "

if [[ ! -v RAPIDS_BUILD_TYPE ]]; then
  rapids-echo-stderr "${echo_prefix}Env var RAPIDS_BUILD_TYPE must be set"
  exit 1
fi

if [[ ! -v GITHUB_SHA ]]; then
  rapids-echo-stderr "${echo_prefix}Env var GITHUB_SHA must be set"
  exit 1
fi

if [[ ! -v GITHUB_REPOSITORY ]]; then
  rapids-echo-stderr "${echo_prefix}Env var GITHUB_REPOSITORY must be set"
  exit 1
fi

repo_name="${GITHUB_REPOSITORY##*/}"

s3_directory_id=""
s3_prefix=""

case "${RAPIDS_BUILD_TYPE}" in
  pull-request)
    # For PRs, we are using the 'trusted jobs on untrusted forks' paradigm
    # by copying PRs to branches named pull-request/$prnum
    # more info:
    #    CopyPRs plugin in ops-bot: https://github.com/rapidsai/ops-bot#plugins
    #    https://circleci.com/blog/triggering-trusted-ci-jobs-on-untrusted-forks/
    s3_directory_id="${GITHUB_REF_NAME##*/}"
    s3_prefix="ci"
    ;;
  branch)
    s3_directory_id="${GITHUB_REF_NAME}"
    s3_prefix="ci"
    ;;
  nightly)
    s3_directory_id="$(date +%F)"
    s3_prefix="nightly"
    ;;
  *)
    rapids-echo-stderr "please pass a valid RAPIDS_BUILD_TYPE"
    exit 1
    ;;
esac

short_hash=${GITHUB_SHA:0:7}

s3_path="s3://rapids-downloads/${s3_prefix}/${repo_name}/"
if [[ "${RAPIDS_BUILD_TYPE}" != "nightly" ]]; then
  s3_path+="${RAPIDS_BUILD_TYPE}/"
fi
s3_path+="${s3_directory_id}/${short_hash}/"

echo -n "${s3_path}"
