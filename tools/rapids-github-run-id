#!/bin/bash
# Determines the GitHub Actions run ID to use in operations with the GitHub API.
#
# When environment variable GITHUB_RUN_ID is defined and the , just returns that value (except for on nightly builds... see below).
# GITHUB_RUN_ID is set automatically on GitHub Actions.
#
# ref: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#default-environment-variables
#
# Otherwise, tries to determine a run ID based on other context in the environment.
# Most of that is provided by 'rapids-prompt-local-repo-config', see that
# script's docs for details.
#
# Where multiple run IDs match the supplied configuration, the most-recently-created one
# is chosen.
#
# Additional environment variables recognized by 'rapids-github-run-id':
#
#   * RAPIDS_BUILD_WORKFLOW_NAME = Filename for the workflow that the run corresponds to.
#                                  Defaults to 'pr.yaml' for RAPIDS_BUILD_TYPE="pull-request" and 'build.yaml' otherwise.
#
set -euo pipefail
export RAPIDS_SCRIPT_NAME="rapids-github-run-id"

rapids-prompt-local-github-auth

case "${RAPIDS_BUILD_TYPE}" in
  pull-request)
    workflow_that_produced_artifacts="${RAPIDS_BUILD_WORKFLOW_NAME:-pr.yaml}"
    ;;
  branch|nightly)
    workflow_that_produced_artifacts="${RAPIDS_BUILD_WORKFLOW_NAME:-build.yaml}"
    ;;
  *)
    rapids-echo-stderr "RAPIDS_BUILD_TYPE must be one of [branch, nightly, pull-request]"
    exit 1
    ;;
esac

if [[ -z "${workflow_that_produced_artifacts:-}" ]]; then
  rapids-echo-stderr "ERROR: Failed to determine workflow file that produced artifacts. Environment variable RAPIDS_BUILD_WORKFLOW_NAME should be non-empty if it is set."
  exit 1
fi

# If the workflow we want artifacts from is the same one that's currently running, just
# use GITHUB_RUN_ID. This prevents a network call to the GitHub API, which reduces the risk of
# hitting temporary network issues and reduces the risk of hitting rate limits.
#
# docs on 'GITHUB_WORKFLOW_REF': https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables
#
if [[ -n "${GITHUB_WORKFLOW_REF:-}" ]] && \
    [[ -n "${GITHUB_RUN_ID:-}" ]] && \
    [[ "${GITHUB_WORKFLOW_REF:-}" =~ github/workflows/${workflow_that_produced_artifacts} ]];
then
  run_id="${GITHUB_RUN_ID}"
else
  # Otherwise, need to look it up via the GitHub API.
  #
  # For example, RAPIDS nightly tests (by convention, 'test.yaml'), would fall here.
  #
  # On those types of runs, get the artifacts from the most recent run on a given
  # branch and commit, without worrying about whether that was technically a 'branch' (triggered by a merge)
  # or 'nightly' (triggered by a schedule) run.
  run_id=$(
    RAPIDS_RETRY_SLEEP=120                                     \
      rapids-retry --quiet gh run list                         \
        --repo "${RAPIDS_REPOSITORY}"                          \
        --branch "${RAPIDS_REF_NAME}"                          \
        --commit "${RAPIDS_SHA}"                               \
        --workflow "${workflow_that_produced_artifacts}".      \
        --json 'createdAt,databaseId'                          \
        --jq 'sort_by(.createdAt) | reverse | .[0] | .databaseId'
  )
fi

if [[ -z "${run_id}" ]]; then
  rapids-echo-stderr "ERROR: failed to find a GitHub Actions run for [RAPIDS_BUILD_TYPE=${RAPIDS_BUILD_TYPE}, RAPIDS_REPOSITORY=${RAPIDS_REPOSITORY}, RAPIDS_REF_NAME=${RAPIDS_REF_NAME}, RAPIDS_SHA=${RAPIDS_SHA}]"
  exit 1
fi

echo -n "${run_id}"
