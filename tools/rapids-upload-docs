#!/bin/bash
# This script uploads RAPIDS docs to S3.
# The docs are expected to be in the following directory structure:
# $RAPIDS_DOCS_DIR
# ├── cudf
# │   ├── html
# │   │   └── <html files>
# │   └── txt
# │       └── <txt files>
# └── dask-cudf
#     ├── html
#     │   └── <html files>
#     └── txt
#         └── <txt files>
# Required Environment Variables:
#  - RAPIDS_DOCS_DIR - a path to a directory containing the docs to upload
#  - RAPIDS_VERSION_NUMBER - the version number of the docs being uploaded
set -euo pipefail
source rapids-constants

checks() {
  if [[ ! -d "${RAPIDS_DOCS_DIR}" ]]; then
    echo "ERROR: RAPIDS_DOCS_DIR must be a directory."
    exit 1
  fi

  if [[ "${GITHUB_ACTIONS:-false}" != "true" ]]; then
    echo "Uploading docs from local builds is not supported."
    echo "The docs are in ${RAPIDS_DOCS_DIR}."
    echo "They can be viewed in a web browser by running:"
    echo "python -m http.server --directory ${RAPIDS_DOCS_DIR}"
    exit 0
  fi

  if [[ ! "${RAPIDS_VERSION_NUMBER}" =~ ^[0-9]{1,2}\.[0-9]{2}$ ]]; then
    echo "ERROR: RAPIDS_VERSION_NUMBER must be a version number in the format X.YY or XX.YY."
    exit 1
  fi

  for PROJECT_DIR in "${RAPIDS_DOCS_DIR}"/*; do
    if [[ -d "${PROJECT_DIR}/html" && ! -f "${PROJECT_DIR}/html/index.html" ]]; then
      echo "ERROR: ${PROJECT_DIR}/html/index.html does not exist."
      exit 1
    fi
  done
}


get_s3_dest() {
  local PROJECT=$1
  local FORMAT=$2

  case "${RAPIDS_BUILD_TYPE}" in
    pull-request)
      echo -n "$(rapids-s3-path)docs/${PROJECT}/${FORMAT}"
      return
      ;;
    branch|nightly)
      echo -n "s3://rapidsai-docs/${PROJECT}/${FORMAT}/${RAPIDS_VERSION_NUMBER}"
      return
      ;;
    *)
      rapids-echo-stderr "please pass a valid RAPIDS_BUILD_TYPE"
      exit 1
      ;;
  esac
}

copy_docs_to_s3() {
  local PROJECT_DIR PROJECT PROJECT_FORMAT_DIR FORMAT

  if [[ "${RAPIDS_BUILD_TYPE}" == "pull-request" ]]; then
    {
      echo '# Documentation Preview:'
      echo ''
      echo '**Note:** NVIDIA VPN access is required to view these URLs.'
      echo ''
    } > "${GITHUB_STEP_SUMMARY}"
  fi

  for PROJECT_DIR in "${RAPIDS_DOCS_DIR}"/*; do
    PROJECT=$(basename "${PROJECT_DIR}")
    for PROJECT_FORMAT_DIR in "${PROJECT_DIR}"/*; do
      FORMAT=$(basename "${PROJECT_FORMAT_DIR}")

      if [[ ! "${FORMAT}" =~ ^(html|txt|xml_tar)$ ]]; then
        echo "ERROR: FORMAT must be either 'html' or 'txt' or 'xml_tar'."
        exit 1
      fi

      if [[ "${FORMAT}" == "xml_tar" ]]; then
        NUM_FILES=$(find "$PROJECT_FORMAT_DIR" -type f | wc -l)
        if [[ ! -f "${PROJECT_FORMAT_DIR}/xml.tar.gz" || $NUM_FILES -ne 1 ]]; then
            echo "Error: The xml_tar directory should contain a single file named xml.tar.gz."
            exit 1
        fi
      fi

      rapids-logger "Uploading ${RAPIDS_VERSION_NUMBER} ${PROJECT} ${FORMAT} docs to S3."

      ACL_OPTION="private"
      if [[ "$FORMAT" == "xml_tar" ]]; then
          ACL_OPTION="public-read"
      fi
      aws s3 sync \
        --no-progress \
        --delete \
        --acl "${ACL_OPTION}" \
        "${PROJECT_FORMAT_DIR}" \
        "$(get_s3_dest "${PROJECT}" "${FORMAT}")"
      echo ""

      if [[ "${RAPIDS_BUILD_TYPE}" != "pull-request" ]]; then
        continue
      fi

      rapids-logger "${PROJECT} ${FORMAT} preview URL:"
      HTTP_URL="$(
        get_s3_dest "${PROJECT}" "${FORMAT}" |
        sed "s|s3://${RAPIDS_DOWNLOADS_BUCKET}|https://${RAPIDS_DOWNLOADS_DOMAIN}|"
      )"
      echo "Note: NVIDIA VPN access is required to view this URL."
      echo "- ${HTTP_URL}/" | tee --append "${GITHUB_STEP_SUMMARY}"
      echo ""
    done
  done
}

checks
copy_docs_to_s3
